apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    release: {{ .Release.Revision | quote}}
spec:
  strategy:
    type: RollingUpdate
  replicas: {{.Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      name: {{ .Release.Name }}
  {{- with .Values.datadog.annotations }}
      annotations:
  {{ toYaml . | indent 8 }}
  {{- end }}
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-config
            items:
            - key: application.yaml
              path: application.yaml
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /config
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
            - name: POD_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: ENVIRONMENT
              value: "{{ .Values.logback.env }}"
            - name: APP_NAME
              value: "{{ .Values.spring.application.name }}"
            - name: FLYWAY_TABLE
              value: "{{ .Values.flyway.table }}"
            - name: JDBC_URL
              value: "{{ .Values.jdbc.url }}"
            - name: SERVLET_CONTEXT_PATH
              value: "{{ .Values.server.servlet.contextPath }}"
            - name: JAVA_OPTS
              value: "{{ .Values.opts.java }}"
            - name: APP_OPTS
              value: "{{ .Values.opts.app }}"
       {{- range $secret := .Values.secrets }}
            - name: {{ $secret.env_name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret.name }}
                  key: {{ $secret.key }}
        {{- end }}
